#!/bin/sh -e

. uniqueness.sh

GT_SRC_DIR=/var/www/pub
GT_TAR_NAME=genometools-next.tar.gz
GT_DIR=genometools-next
METASCRIPTS_DIR=$HOME/gtmetascripts
INSTALL_DIR=$METASCRIPTS_DIR/gt_next_small/$GT_DIR/install

# source git repository used for `git show`
export GIT_DIR=/var/www/pub/git/genometools.git

if [ $GT_SRC_DIR/$GT_TAR_NAME -nt $METASCRIPTS_DIR/gt_next_small/$GT_TAR_NAME ] \
   && is_unique
then
  COMMIT=`zcat $GT_SRC_DIR/$GT_TAR_NAME | git get-tar-commit-id`
  git show --stat $COMMIT

  mkdir -p $METASCRIPTS_DIR/gt_next_small
  cp -f $GT_SRC_DIR/$GT_TAR_NAME $METASCRIPTS_DIR/gt_next_small
  rm -rf $METASCRIPTS_DIR/gt_next_small/$GT_DIR
  cd $METASCRIPTS_DIR/gt_next_small
  tar xzf $GT_TAR_NAME
  cd $GT_DIR
  make 64bit=yes amalgamation=yes dist > /dev/null
  make 64bit=yes install prefix=$INSTALL_DIR > /dev/null

  # check for symbols which do not start with gt_
  echo "check for symbols which do not start with gt_"
  ! nm lib/libgenometools.so | egrep '^[^ ]{8} T [^g][^t][^_]' | \
  egrep -v '^[^ ]{8} T (XML|md5|zError|zcalloc|zcfree|zlibCompileFlags|zlibVersion|lua|inflate|deflate|crc32|fsetkey|fencrypt|compress|adler32|_fini|_init|Xml)'

  # check compiling example program
  cd src/examples
  make prefix=$INSTALL_DIR
  ./gff3validator ../../testdata/encode_known_genes_Mar07.gff3
  cd ../..

  make cleanup
  make cairo=no > /dev/null

  make cleanup
  make 64bit=yes assert=no > /dev/null

  make cleanup
  make 64bit=yes > /dev/null

  make cleanup
  make 64bit=yes cov=yes > /dev/null
  make 64bit=yes cov=yes memcheck=yes test
fi
